<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SellNest</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <script src="https://kit.fontawesome.com/d968c2f6ce.js" crossorigin="anonymous"></script>
  <%= stylesheet_link_tag 'home', media: 'all', 'data-turbolinks-track': 'reload' %>
  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
</head>
<body>
<div class="header">
  <h1>SellNest</h1>
  <div class="button-group">
    <% if user_signed_in? %>
      <% if current_user.email.eql? 'admin@email' %>
        <%= link_to 'Admin Page', admin_path, class: 'btn account-buttons' %>
      <% end %>
      <%= link_to cart_path do %>
        <i class="fas fa-shopping-cart btn"></i>
      <% end %>
      <%= link_to bookmarks_path do %>
        <i class="fa-solid fa-bookmark btn"></i>
        <%end %>
      <%= link_to notifications_path, class: "btn notification-btn" do %>
      <span class="icon">
        <i class="fa-solid fa-bell"></i>
        <span class="notification-count"><%= current_user.notifications.unread.count %></span>
      </span>
      <% end %>
      <%= link_to 'Profile', user_path(current_user), class: 'btn account-buttons' %>
      <%= button_to "Log Out", destroy_user_session_path, data: {turbo: "false"}, method: :delete, class: 'btn account-buttons' %>
    <% else %>
      <%= button_to 'Login', new_user_session_path, class: "btn account-buttons" %>
      <%= link_to 'Signup', new_user_registration_path, class: 'btn account-buttons' %>
    <% end %>
  </div>
</div>
<div class="search-container">
    <%= form_tag(root_path, method: :get, class: "search-form") do %>
      <%= text_field_tag :search, params[:search], placeholder: "Search Listings", class: "search-field" %>
      <%= submit_tag "Search", name: nil, class: "search-button" %>
    <% end %>
</div>
<div class="sort-container">
  <%= link_to 'Price Low to High', root_path(sort: 'price_asc'), class: 'btn' %>
  <%= link_to 'Price High to Low', root_path(sort: 'price_desc'), class: 'btn' %>
  <%= link_to 'Newest First', root_path(sort: 'newest'), class: 'btn' %>
  <%= link_to 'Oldest First', root_path(sort: 'oldest'), class: 'btn' %>
</div>
<div class="filters-container">
<%= form_tag(root_path, method: :get, class: "filter-form") do %>
  <div class="form-group">
    <%= label_tag(:min_price, "Minimum Price") %>
    <%= text_field_tag(:min_price, nil, class: "min-price-field") %>
  </div>
  <div class="form-group">
    <%= label_tag(:max_price, "Maximum Price") %>
    <%= text_field_tag(:max_price, nil, class: "max-price-field") %>
  </div>
  <div class="form-group">
    <%= label_tag(:tags, "Category") %>
    <%= select_tag :tags, options_for_select(Tag.all.map { |tag| [tag.name, tag.id] }), include_blank: true, class: "category-select" %>
  </div>
  <%= submit_tag "Filter", class: "btn filter-button" %>
<% end %>
</div>
<div class="Create">
  <% if current_user.seller %>
    <%= link_to 'Create New Listing', new_listing_path, class: "btn account-buttons listing-button" %>
  <% end %>
</div>
<main>
  <div class="listings-container">
    <% @listings.each do |listing| %>
      <% unless listing.is_sold %>
        <div class="grid-item">
          <div class="carousel-container">
            <%if user_signed_in? %>
              <% if current_user && current_user.bookmarked?(listing) %>
                <div class="bookmark-icon" onclick="removeBookmark(<%= listing.id %>)" data-listing-id="<%= listing.id %>">
                  <i class="fa-solid fa-bookmark"></i> <!-- Use your bookmark icon here -->
                </div>
              <% else %>
                <div class="bookmark-icon" onclick="addBookmark(<%= listing.id %>)" data-listing-id="<%= listing.id %>">
                  <i class="fa-regular fa-bookmark"></i> <!-- Use your bookmark icon here -->
                </div>
              <% end %>
            <% end %>

            <div class="carousel">
              <% listing.photos.each do |photo| %>
                <%= image_tag(photo, width: '100%', height: 'auto') %>
              <% end %>
            </div>
            <% if listing.photos.length > 1 %>
              <div class="carousel-controls">
                <button class="carousel-arrow" onclick="prevSlide(this)">❮</button>
                <button class="carousel-arrow" onclick="nextSlide(this)">❯</button>
              </div>
            <% end %>
          </div>
          <h2 class="listing-title"><%= listing.name %></h2>
          <h2 class="listing-price"><%= number_to_currency(listing.price, unit: "$", precision: 2) %></h2>
          <div class="listing-created-at">
            <%= listing.created_at.strftime('%Y-%m-%d') %>
          </div>
          <div class="listing-buttons">
            <% reviews = Review.where(listing_id: listing.user.listings.pluck(:id)) %>
            <% if reviews.any? %>
              <% full_eggs = reviews.sum(:rating) / reviews.count %>
              <% remaining_eggs = 5 - full_eggs - 1 %>
              <% partial_egg = ((1 - ((reviews.sum(:rating) / reviews.count.to_f) - full_eggs)) * 100).to_i %>
              <% num_reviews = reviews.count %>
            <% else %>
              <% full_eggs = 0 %>
              <% remaining_eggs = 5 %>
              <% partial_egg = 100 %>
              <% num_reviews = 0 %>
            <% end %>
            <button class="btn details-button" onclick="showDescriptionModal('<%= listing.name %>', '<%= number_to_currency(listing.price, unit: "$", precision: 2) %>', '<%= listing.description %>', '<%= listing.tags.to_json %>', '<%= listing.user.email.split('@').first %>', '<%= num_reviews %>', '<%= full_eggs %>', '<%= remaining_eggs %>', '<%= partial_egg %>')">Details</button>
            <%= button_to 'Add to Cart', add_item_to_cart_path(listing), method: :post, class: 'btn add-to-cart-button' %>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>
  <div id="descriptionModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeDescriptionModal()">&times;</span>
    <h2 class="listing-title" id="modalTitle"></h2>
    <h2 class="listing-price" id="modalPrice"></h2>
    <h2 class="listing-seller" id="modalSeller"></h2>
    <div class="listing-eggs" id="modalEggs"></div>
    <p id="modalDescription"></p>
    <div id="modalTags"></div>
  </div>
  </div>
</main>
<script>
    function prevSlide(button) {
        const carousel = button.parentElement.previousElementSibling;
        carousel.appendChild(carousel.firstElementChild);
    }

    function nextSlide(button) {
        const carousel = button.parentElement.previousElementSibling;
        carousel.prepend(carousel.lastElementChild);
    }

    function showDescriptionModal(title, price, description, tags, seller, num_reviews, full_eggs, remaining_eggs, partial_egg) {
        const modal = document.getElementById('descriptionModal');
        const modalTitle = document.getElementById('modalTitle');
        const modalPrice = document.getElementById('modalPrice');
        const modalDescription = document.getElementById('modalDescription');
        const modalSeller = document.getElementById('modalSeller')
        const modalTags = document.getElementById('modalTags');
        const parsedTags = JSON.parse(tags);

        modalTitle.innerHTML = title;
        modalPrice.innerHTML = price;
        modalDescription.innerHTML = 'Description: ' + description;
        modalSeller.innerText = 'Seller: ' + seller;

        const eggsContainer = document.getElementById('modalEggs');
        eggsContainer.innerHTML = '';

        for (let i = 0; i < full_eggs; i++) {
            eggsContainer.innerHTML += '<i class="fa-solid fa-egg"></i>';
        }
        if (full_eggs < 5) {
            eggsContainer.innerHTML += `<i class="fa-solid fa-egg" style="filter: invert(${partial_egg}%);"></i>`;
        }
        for (let i = 0; i < remaining_eggs; i++) {
            eggsContainer.innerHTML += '<i class="fa-solid fa-egg" style="filter: invert(100%);"></i>';
        }

        eggsContainer.innerHTML += (' (' + num_reviews + ')')

        modalTags.innerHTML = '';

        if (parsedTags && parsedTags.length > 0) {
            const isPlural = parsedTags.length > 1 ? 'Categories:' : 'Category:';
            modalTags.textContent = `${isPlural} ${parsedTags.map((tag, index) => (index === 0 ? tag.name : ` ${tag.name}`)).join(',')}`;
        }

        modal.style.display = 'flex';
    }

    function closeDescriptionModal() {
        const modal = document.getElementById('descriptionModal');
        modal.style.display = 'none';
    }

    function addBookmark(listingId) {
        fetch(`/bookmarks?listing_id=${listingId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': '<%= form_authenticity_token %>'
            },
            credentials: 'same-origin'
        })
            .then(response => {
                if (response.ok) {
                    const bookmarkIcon = document.querySelector(`.bookmark-icon[data-listing-id="${listingId}"]`);
                    if (bookmarkIcon) {
                        bookmarkIcon.innerHTML = '<i class="fa-solid fa-bookmark"></i>';
                        bookmarkIcon.setAttribute('onclick', `removeBookmark(${listingId})`);
                    }
                } else {
                }
            })
            .catch(error => console.error('Error:', error));
    }

    function removeBookmark(listingId) {
        fetch(`/bookmarks/${listingId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': '<%= form_authenticity_token %>'
            },
            credentials: 'same-origin'
        })
            .then(response => {
                if (response.ok) {
                    const bookmarkIcon = document.querySelector(`.bookmark-icon[data-listing-id="${listingId}"]`);
                    if (bookmarkIcon) {
                        bookmarkIcon.innerHTML = '<i class="fa-regular fa-bookmark"></i>';
                        bookmarkIcon.setAttribute('onclick', `addBookmark(${listingId})`);
                    }
                } else {
                }
            })
            .catch(error => console.error('Error:', error));
    }

    document.addEventListener('ajax:success', function(event) {
        var element = event.target;
        if(element.classList.contains('mark-as-read')) {
            element.closest('.notification-item').remove();
            var notificationCount = document.querySelector('.notification-count');
            notificationCount.textContent = parseInt(notificationCount.textContent) - 1;
        }
    });

    window.onclick = function(event) {
        const modal = document.getElementById('descriptionModal');
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    };
</script>
</body>
</html>