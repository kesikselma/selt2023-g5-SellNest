<!DOCTYPE html>
<html>
<head>
  <title>Edit Listing</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
      body {
          font-family: Arial, sans-serif;
          margin: 0;
          padding: 0;
          background-color: #f7f7f7;
          display: flex;
          justify-content: center;
          align-items: center;
          height: 100vh;
          flex-direction: column;
      }
      .container {
          text-align: center;
          width: 400px; /* Adjust width as needed */
          background-color: white;
          padding: 20px;
          border-radius: 10px;
          box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
          margin-top: -50px; /* Adjust as needed */
      }
      h1 {
          color: #333;
      }
      .form-group {
          margin-bottom: 15px;
          text-align: left;
      }
      label {
          display: block;
          margin-bottom: 5px;
      }
      input[type="text"],
      input[type="number"],
      input[type="file"],
      textarea {
          width: 100%;
          padding: 8px;
          border-radius: 4px;
          border: 1px solid #ccc;
          box-sizing: border-box; /* Added to keep width as 100% including padding */
      }
      input[type="submit"] {
          background-color: #ffd700;
          color: white;
          border: none;
          padding: 10px 20px;
          border-radius: 5px;
          cursor: pointer;
          transition: background-color 0.3s;

      }
      input[type="submit"]:hover {
          background-color: #b8860b;
          transform: scale(1.05);
      }
      .text-logo {
          display: block;
          text-align: center;
          font-size: 24px;
          font-weight: bold;
          color: #ffd700;
          text-decoration: none;
          margin-bottom: 20px;
      }
      .horizontal-tags-list {
          display: flex;
          flex-wrap: wrap; /* Allow tags to wrap onto the next line */
          gap: 8px; /* Adjust the space between tags */
      }

      .selected-tag {
          display: inline-block;
          /*background-color: #eaeaea;*/
          padding: 4px 8px;
          margin-bottom: 8px; /* Adjust vertical spacing between tags */
          border-radius: 4px;
      }

      .add-tag-btn {
          background-color: #ffd700;
          color: white;
          border: none;
          padding: 10px 20px;
          border-radius: 5px;
          cursor: pointer;
          transition: background-color 0.3s, transform 0.2s;
      }

      .add-tag-btn:hover {
          background-color: #b8860b;
          /* Scale the button on hover */
      }

      .remove-tag {
          background-color: #d9534f; /* Lighter shade of red */
          color: white; /* Text color */
          border: none;
          padding: 4px 8px;
          border-radius: 4px;
          cursor: pointer;
          transition: background-color 0.3s, transform 0.2s, color 0.3s;
      }

      .remove-tag:hover {
          background-color: #c9302c; /* Slightly darker shade of red on hover */

          transform: scale(1.05); /* Scale the button on hover */
      }

  </style>
</head>
<body>
<div class="container">
  <h1>Edit Listing</h1>

  <%= form_for @listing, url: listing_path(@listing), method: :patch, html: { id:'editListingForm', class: "form-horizontal"}, multipart: true do |f| %>
    <div class="form-group">
      <%= f.label :name, 'Name of Item:' %>
      <%= f.text_field :name, required: true %>
    </div>

    <div class="field">
      <%= f.label :tag_ids, 'Select Tags' %>
      <%= f.select :tag_ids, Tag.all.collect { |t| [t.name, t.id] }, { include_blank: true }, { multiple: true, class: 'tag-dropdown' } %>
      <%= f.button "Add tag", type: 'button', class: 'add-tag-btn' %>
    </div>

    <!-- Display selected tags -->
    <div class="form-group">
      <div class="selected-tags-list horizontal-tags-list">
        <% @listing.tags.each do |tag| %>
          <span class="selected-tag">
            <%= tag.name %>
            <button type="button" class="remove-tag" data-tag-id="<%= tag.id %>">x</button>
          </span>
        <% end %>
      </div>
    </div>

    <div class="form-group">
      <%= f.label :description, 'Description:' %>
      <%= f.text_area :description, rows: 4, required: true %>
    </div>

    <div class="form-group">
      <%= f.label :price, 'Price:' %>
      <%= f.text_field :price, class: 'form-control', step: '0.01', pattern: '\d+(\.\d{1,2})?', required: true %>
    </div>

    <div class="form-group">
      <%= f.submit 'Update Listing', class: 'btn btn-primary' %>
    </div>
  <% end %>

  <%= button_to 'Delete', listing_path(@listing), method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger' %>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const addTagBtn = document.querySelector('.add-tag-btn');
        const selectedTagsList = document.querySelector('.selected-tags-list');
        const tagDropdown = document.querySelector('.tag-dropdown');
        const form = document.getElementById('editListingForm');

        addTagBtn.addEventListener('click', function() {
            const selectedOption = tagDropdown.options[tagDropdown.selectedIndex];
            const selectedValue = selectedOption.value;

            if (selectedValue && !isTagAlreadyAdded(selectedValue)) {
                const tagName = selectedOption.text;

                const tagListItem = document.createElement('div');
                tagListItem.classList.add('selected-tag');
                tagListItem.innerHTML = `
    ${tagName}
    <input type="hidden" name="listing[tag_ids][]" value="${selectedValue}" data-tagName="${tagName}">
    <button type="button" class="remove-tag" data-tag-id="${selectedValue}">x</button>
`;

                selectedTagsList.appendChild(tagListItem);
            }
        });

        function isTagAlreadyAdded(tagId, tagName) {
            const tagInputs = document.querySelectorAll('input[name="listing[tag_ids][]"]');
            return Array.from(tagInputs).some(input => input.value === tagId && input.dataset.tagName === tagName);
        }


        selectedTagsList.addEventListener('click', function(event) {
            if (event.target.classList.contains('remove-tag')) {
                const tagId = event.target.dataset.tagId;
                const tagToRemove = document.querySelector(`[data-tag-id="${tagId}"]`);

                if (tagToRemove) {
                    tagToRemove.parentElement.remove();
                }
            }
        });

        form.addEventListener('submit', function(event) {
            // Prevent the default form submission
            event.preventDefault();

            // Remove the last tag ID from the array before submitting the form
            const tagInputs = document.querySelectorAll('input[name="listing[tag_ids][]"]');
            if (tagInputs.length > 0) {
                // Remove the last tag input from the NodeList
                const lastTagInput = tagInputs[tagInputs.length - 1];
                lastTagInput.parentElement.remove();
            }

            // Submit the form
            form.submit();
        });
    });

</script>
</body>
</html>