<!DOCTYPE html>
<html>
<head>
  <title>Create Listing</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <%= stylesheet_link_tag 'create-listing', media: 'all', 'data-turbolinks-track': 'reload' %>
</head>
<body>
<div class="container">
  <a href="/" class="text-logo">SellNest</a>
  <h1>Create Listing</h1>
  <%= form_for(@listing, url: listings_path, html: { id:'newListingForm', class: "form-horizontal", multipart: true}) do |f| %>
    <div class="form-group">
      <%= f.label :name %>
      <%= f.text_field :name, class: 'form-control', required: true %>
    </div>
    <%= f.hidden_field :user_id, value: current_user.id %>
    <%= f.hidden_field :is_sold, value: false %>
    <div class="field">
      <div class="tag-names"><%= f.label :tag_ids, 'Select Tags' %></div>
      <%= f.select :tag_ids, Tag.all.collect { |t| [t.name, t.id] }, { include_blank: true }, { multiple: true, class: 'tag-dropdown' } %>

      <%= f.button "Add tag", type: 'button', class: 'add-tag-btn' %>
    </div>
    <div class="form-group">
      <div class="selected-tags-list horizontal-tags-list"></div>
      <% f.object.tags.each do |tag| %>
        <div class="form-group">
          <div class="selected-tags-list horizontal-tags-list">
            <% f.object.tags.each do |tag| %>
      <span class="selected-tag">
        <%= tag.name %>
        <button type="button" class="remove-tag" data-tag-id="<%= tag.id %>">x</button>
      </span>
            <% end %>
          </div>
        </div>
    <% end %>
    </div>
    <div class="form-group">
      <%= f.label :photos, 'Upload Photos:' %>
      <%= f.file_field :photos, accept: 'image/*', multiple: true %>
    </div>
    <div class="form-group">
        <%= f.label :description %>
        <%= f.text_area :description, class: 'form-control', rows: 4, required: true %>
    </div>
    <div class="form-group">
      <%= f.label :price %>
      <%= f.text_field :price, id: 'priceInput', class: 'form-control', step: '0.01', pattern: '\d+(\.\d{1,2})?', required: true %>
    </div>
    <div class="profit">
      <h3>Estimated Profit:</h3>
      <p id="estimatedProfit">0.00</p>
    </div>
    <div class="form-group">
      <%= f.submit "Create Listing", class: 'add-tag-btn' %>
    </div>
  <% end %>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        function updateEstimatedProfit() {
            var priceInput = document.getElementById('priceInput');
            var priceValue = parseFloat(priceInput.value);
            var estimatedProfit = priceValue * 0.95 || 0;
            document.getElementById('estimatedProfit').innerText = estimatedProfit.toFixed(2);
        }

        document.getElementById('priceInput').addEventListener('input', updateEstimatedProfit);
    });

    document.addEventListener('DOMContentLoaded', function() {
        const addTagBtn = document.querySelector('.add-tag-btn');
        const selectedTagsList = document.querySelector('.selected-tags-list');
        const tagDropdown = document.querySelector('.tag-dropdown');
        const form = document.getElementById('newListingForm');

        addTagBtn.addEventListener('click', function() {
            const selectedOption = tagDropdown.options[tagDropdown.selectedIndex];
            const selectedValue = selectedOption.value;

            if (selectedValue && !isTagAlreadyAdded(selectedValue)) {
                const tagName = selectedOption.text;

                const tagListItem = document.createElement('div');
                tagListItem.classList.add('selected-tag');
                tagListItem.innerHTML = `
    ${tagName}
    <input type="hidden" name="listing[tag_ids][]" value="${selectedValue}" data-tagName="${tagName}">
    <button type="button" class="remove-tag" data-tag-id="${selectedValue}">x</button>
`;

                selectedTagsList.appendChild(tagListItem);
            }
        });

        function isTagAlreadyAdded(tagId, tagName) {
            const tagInputs = document.querySelectorAll('input[name="listing[tag_ids][]"]');
            return Array.from(tagInputs).some(input => input.value === tagId && input.dataset.tagName === tagName);
        }


        selectedTagsList.addEventListener('click', function(event) {
            if (event.target.classList.contains('remove-tag')) {
                const tagId = event.target.dataset.tagId;
                const tagToRemove = document.querySelector(`[data-tag-id="${tagId}"]`);

                if (tagToRemove) {
                    tagToRemove.parentElement.remove();
                }
            }
        });

        form.addEventListener('submit', function(event) {
            // Prevent the default form submission
            event.preventDefault();

            // Remove the last tag ID from the array before submitting the form
            const tagInputs = document.querySelectorAll('input[name="listing[tag_ids][]"]');
            if (tagInputs.length > 0) {
                // Remove the last tag input from the NodeList
                const lastTagInput = tagInputs[tagInputs.length - 1];
                lastTagInput.parentElement.remove();
            }

            // Submit the form
            form.submit();
        });
    });

</script>
</body>
</html>

